// tsup.config.ts
import { defineConfig } from "tsup";

// env.ts
import { createEnv } from "@t3-oss/env-core";
import { z } from "zod";
var env = createEnv({
  server: {
    NODE_ENV: z.enum(["development", "production", "test"]).optional(),
    RESEND_API_KEY: z.string().optional(),
    EMAIL_SANDBOX_ENABLED: z.string().optional(),
    EMAIL_SANDBOX_HOST: z.string().optional(),
    EMAIL_FROM: z.string().email().optional(),
    SITE_NAME: z.string().default("QCO"),
    SITE_URL: z.string().url().optional()
  },
  client: {},
  clientPrefix: "NEXT_PUBLIC_",
  runtimeEnv: {
    NODE_ENV: process.env.NODE_ENV,
    RESEND_API_KEY: process.env.RESEND_API_KEY,
    EMAIL_SANDBOX_ENABLED: process.env.EMAIL_SANDBOX_ENABLED,
    EMAIL_SANDBOX_HOST: process.env.EMAIL_SANDBOX_HOST,
    EMAIL_FROM: process.env.EMAIL_FROM,
    SITE_NAME: process.env.SITE_NAME,
    SITE_URL: process.env.SITE_URL
  },
  skipValidation: !!process.env.CI || process.env.npm_lifecycle_event === "lint"
});

// tsup.config.ts
var isProduction = env.NODE_ENV === "production";
var tsup_config_default = defineConfig({
  entry: ["./emails/**/*.ts", "index.ts"],
  format: ["esm"],
  dts: true,
  splitting: false,
  sourcemap: false,
  clean: true,
  minify: isProduction,
  external: ["react"]
});
export {
  tsup_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidHN1cC5jb25maWcudHMiLCAiZW52LnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX2luamVjdGVkX2ZpbGVuYW1lX18gPSBcIkM6XFxcXFByb2plY3RzXFxcXHFjb1xcXFxwYWNrYWdlc1xcXFxlbWFpbHNcXFxcdHN1cC5jb25maWcudHNcIjtjb25zdCBfX2luamVjdGVkX2Rpcm5hbWVfXyA9IFwiQzpcXFxcUHJvamVjdHNcXFxccWNvXFxcXHBhY2thZ2VzXFxcXGVtYWlsc1wiO2NvbnN0IF9faW5qZWN0ZWRfaW1wb3J0X21ldGFfdXJsX18gPSBcImZpbGU6Ly8vQzovUHJvamVjdHMvcWNvL3BhY2thZ2VzL2VtYWlscy90c3VwLmNvbmZpZy50c1wiO2ltcG9ydCB7IGRlZmluZUNvbmZpZyB9IGZyb20gXCJ0c3VwXCI7XHJcbmltcG9ydCB7IGVudiB9IGZyb20gXCIuL2VudlwiO1xyXG5cclxuY29uc3QgaXNQcm9kdWN0aW9uID0gZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGRlZmluZUNvbmZpZyh7XHJcbiAgZW50cnk6IFtcIi4vZW1haWxzLyoqLyoudHNcIiwgXCJpbmRleC50c1wiXSxcclxuICBmb3JtYXQ6IFtcImVzbVwiXSxcclxuICBkdHM6IHRydWUsXHJcbiAgc3BsaXR0aW5nOiBmYWxzZSxcclxuICBzb3VyY2VtYXA6IGZhbHNlLFxyXG4gIGNsZWFuOiB0cnVlLFxyXG4gIG1pbmlmeTogaXNQcm9kdWN0aW9uLFxyXG4gIGV4dGVybmFsOiBbXCJyZWFjdFwiXSxcclxufSk7XHJcbiIsICJjb25zdCBfX2luamVjdGVkX2ZpbGVuYW1lX18gPSBcIkM6XFxcXFByb2plY3RzXFxcXHFjb1xcXFxwYWNrYWdlc1xcXFxlbWFpbHNcXFxcZW52LnRzXCI7Y29uc3QgX19pbmplY3RlZF9kaXJuYW1lX18gPSBcIkM6XFxcXFByb2plY3RzXFxcXHFjb1xcXFxwYWNrYWdlc1xcXFxlbWFpbHNcIjtjb25zdCBfX2luamVjdGVkX2ltcG9ydF9tZXRhX3VybF9fID0gXCJmaWxlOi8vL0M6L1Byb2plY3RzL3Fjby9wYWNrYWdlcy9lbWFpbHMvZW52LnRzXCI7aW1wb3J0IHsgY3JlYXRlRW52IH0gZnJvbSBcIkB0My1vc3MvZW52LWNvcmVcIjtcclxuaW1wb3J0IHsgeiB9IGZyb20gXCJ6b2RcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBlbnYgPSBjcmVhdGVFbnYoe1xyXG4gIHNlcnZlcjoge1xyXG4gICAgTk9ERV9FTlY6IHouZW51bShbXCJkZXZlbG9wbWVudFwiLCBcInByb2R1Y3Rpb25cIiwgXCJ0ZXN0XCJdKS5vcHRpb25hbCgpLFxyXG4gICAgUkVTRU5EX0FQSV9LRVk6IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcclxuICAgIEVNQUlMX1NBTkRCT1hfRU5BQkxFRDogei5zdHJpbmcoKS5vcHRpb25hbCgpLFxyXG4gICAgRU1BSUxfU0FOREJPWF9IT1NUOiB6LnN0cmluZygpLm9wdGlvbmFsKCksXHJcbiAgICBFTUFJTF9GUk9NOiB6LnN0cmluZygpLmVtYWlsKCkub3B0aW9uYWwoKSxcclxuICAgIFNJVEVfTkFNRTogei5zdHJpbmcoKS5kZWZhdWx0KFwiUUNPXCIpLFxyXG4gICAgU0lURV9VUkw6IHouc3RyaW5nKCkudXJsKCkub3B0aW9uYWwoKSxcclxuICB9LFxyXG4gIGNsaWVudDoge30sXHJcbiAgY2xpZW50UHJlZml4OiBcIk5FWFRfUFVCTElDX1wiLFxyXG4gIHJ1bnRpbWVFbnY6IHtcclxuICAgIE5PREVfRU5WOiBwcm9jZXNzLmVudi5OT0RFX0VOVixcclxuICAgIFJFU0VORF9BUElfS0VZOiBwcm9jZXNzLmVudi5SRVNFTkRfQVBJX0tFWSxcclxuICAgIEVNQUlMX1NBTkRCT1hfRU5BQkxFRDogcHJvY2Vzcy5lbnYuRU1BSUxfU0FOREJPWF9FTkFCTEVELFxyXG4gICAgRU1BSUxfU0FOREJPWF9IT1NUOiBwcm9jZXNzLmVudi5FTUFJTF9TQU5EQk9YX0hPU1QsXHJcbiAgICBFTUFJTF9GUk9NOiBwcm9jZXNzLmVudi5FTUFJTF9GUk9NLFxyXG4gICAgU0lURV9OQU1FOiBwcm9jZXNzLmVudi5TSVRFX05BTUUsXHJcbiAgICBTSVRFX1VSTDogcHJvY2Vzcy5lbnYuU0lURV9VUkwsXHJcbiAgfSxcclxuICBza2lwVmFsaWRhdGlvbjpcclxuICAgICEhcHJvY2Vzcy5lbnYuQ0kgfHwgcHJvY2Vzcy5lbnYubnBtX2xpZmVjeWNsZV9ldmVudCA9PT0gXCJsaW50XCIsXHJcbn0pO1xyXG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQXFQLFNBQVMsb0JBQW9COzs7QUNBN0MsU0FBUyxpQkFBaUI7QUFDL1AsU0FBUyxTQUFTO0FBRVgsSUFBTSxNQUFNLFVBQVU7QUFBQSxFQUMzQixRQUFRO0FBQUEsSUFDTixVQUFVLEVBQUUsS0FBSyxDQUFDLGVBQWUsY0FBYyxNQUFNLENBQUMsRUFBRSxTQUFTO0FBQUEsSUFDakUsZ0JBQWdCLEVBQUUsT0FBTyxFQUFFLFNBQVM7QUFBQSxJQUNwQyx1QkFBdUIsRUFBRSxPQUFPLEVBQUUsU0FBUztBQUFBLElBQzNDLG9CQUFvQixFQUFFLE9BQU8sRUFBRSxTQUFTO0FBQUEsSUFDeEMsWUFBWSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsU0FBUztBQUFBLElBQ3hDLFdBQVcsRUFBRSxPQUFPLEVBQUUsUUFBUSxLQUFLO0FBQUEsSUFDbkMsVUFBVSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsU0FBUztBQUFBLEVBQ3RDO0FBQUEsRUFDQSxRQUFRLENBQUM7QUFBQSxFQUNULGNBQWM7QUFBQSxFQUNkLFlBQVk7QUFBQSxJQUNWLFVBQVUsUUFBUSxJQUFJO0FBQUEsSUFDdEIsZ0JBQWdCLFFBQVEsSUFBSTtBQUFBLElBQzVCLHVCQUF1QixRQUFRLElBQUk7QUFBQSxJQUNuQyxvQkFBb0IsUUFBUSxJQUFJO0FBQUEsSUFDaEMsWUFBWSxRQUFRLElBQUk7QUFBQSxJQUN4QixXQUFXLFFBQVEsSUFBSTtBQUFBLElBQ3ZCLFVBQVUsUUFBUSxJQUFJO0FBQUEsRUFDeEI7QUFBQSxFQUNBLGdCQUNFLENBQUMsQ0FBQyxRQUFRLElBQUksTUFBTSxRQUFRLElBQUksd0JBQXdCO0FBQzVELENBQUM7OztBRHZCRCxJQUFNLGVBQWUsSUFBSSxhQUFhO0FBRXRDLElBQU8sc0JBQVEsYUFBYTtBQUFBLEVBQzFCLE9BQU8sQ0FBQyxvQkFBb0IsVUFBVTtBQUFBLEVBQ3RDLFFBQVEsQ0FBQyxLQUFLO0FBQUEsRUFDZCxLQUFLO0FBQUEsRUFDTCxXQUFXO0FBQUEsRUFDWCxXQUFXO0FBQUEsRUFDWCxPQUFPO0FBQUEsRUFDUCxRQUFRO0FBQUEsRUFDUixVQUFVLENBQUMsT0FBTztBQUNwQixDQUFDOyIsCiAgIm5hbWVzIjogW10KfQo=
